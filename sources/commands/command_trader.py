"""
Trader
"""

from .command_custom import DwgbCmdCustom, DwgbCmdConst
from ..classes import DwgbDatabase, DwgbTransport, DwgbMessage


class DwgbCmdTrader(DwgbCmdCustom):
    """ –ê–≤—Ç–æ—Å–∫—É–ø—â–∏–∫ """

    def __init__(self, database: DwgbDatabase, transport: DwgbTransport):
        """ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä """
        super().__init__(database, transport)
        self.regView = self.getRegex(r"^‚öñ(.+) –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω \((\d+)\).+?(\d+)\*(.+) - (\d+) –∑–æ–ª–æ—Ç–∞")
        self.regAccept = self.getRegex(r"^‚öñ.+–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Å –∞—É–∫—Ü–∏–æ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç (\d+)\*(.+) - (\d+)")
        self.regScrolls = self.getRegex(r"^üìú–í—ã –ø–æ–ª—É—á–∏–ª–∏ 100 –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü")

    def work(self, message: DwgbMessage):
        """ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏—è """
        if self.scrolls(message):
            return True
        if self.buy(message):
            return True
        if self.trade(message):
            return True
        else:
            return False

    def buy(self, message: DwgbMessage):
        """ –ü–æ–∫—É–ø–∫–∞ """
        if message.user != self._DW_BOT_ID:
            return False
        # –ü—Ä–æ–±—å–µ–º —Ä–µ–≥—É–ª—è—Ä–∫—É
        tmp_match = self.regView.search(message.text)
        if not tmp_match:
            return False
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏
        tmp_lot = tmp_match[2]
        tmp_count = int(tmp_match[3])
        tmp_name = tmp_match[4].lower()
        tmp_cost = int(tmp_match[5])
        # –ü–æ–∏—â–µ–º, –Ω—É–∂–µ–Ω –ª–∏ –æ–Ω –Ω–∞–º
        if tmp_name not in DwgbCmdConst.STORE_DATA:
            return True
        # –í—ã—Ç–∞—â–∏–º
        tmp_item = DwgbCmdConst.STORE_DATA[tmp_name]
        # –õ–∏–º–∏—Ç
        if tmp_item.count + tmp_count >= tmp_item.limit or tmp_count > DwgbCmdConst.STORE_FREE:
            return True
        # –¶–µ–Ω–∞
        if tmp_item.trade >= int(tmp_cost / tmp_count):
            message.channel = self._GAME_BOT_ID
            self.transport.writeChannel("–ö—É–ø–∏—Ç—å –ª–æ—Ç %s" % tmp_lot, message, False)
        # –£—Å–ø–µ—à–Ω–æ
        return True

    def trade(self, message: DwgbMessage):
        """ –£—á–µ—Ç –ø–æ–∫—É–ø–∫–∏ """
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–∞–Ω–∞–ª
        if message.channel != self._GAME_BOT_ID:
            return False
        # –ü—Ä–æ–≤–µ—Ä–∏–º –±–æ—Ç–∞
        if message.user != self._GAME_BOT_ID:
            return False
        # –ü—Ä–æ–±—å–µ–º —Ä–µ–≥—É–ª—è—Ä–∫—É
        tmp_match = self.regAccept.search(message.text)
        if not tmp_match:
            return False
        # –£—á–µ—Ç –ø–æ–∫—É–ø–∫–∏
        tmp_count = int(tmp_match[1])
        tmp_name = tmp_match[2].lower()
        tmp_cost = int(tmp_match[3])
        # –≠—Ç–æ –º—ã –Ω–µ –∑–∞–∫—É–ø–∞–µ–º
        if tmp_name not in DwgbCmdConst.STORE_DATA:
            return True
        # –ó–∞–ø–∏—à–µ–º –≤ –±–∞–∑—É
        self.setStorage(0, self._ITEM_GOLD, -tmp_cost)
        self.setBookPages(DwgbCmdConst.STORE_DATA[tmp_name], tmp_count)
        # –£—Å–ø–µ—à–Ω–æ
        return True

    def scrolls(self, message: DwgbMessage):
        """ –ü–æ–∫—É–ø–∫–∞ """
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–∞–Ω–∞–ª
        if message.channel != self._GAME_BOT_ID:
            return False
        # –ü—Ä–æ–≤–µ—Ä–∏–º –±–æ—Ç–∞
        if message.user != self._GAME_BOT_ID:
            return False
        # –ü—Ä–æ–±—å–µ–º —Ä–µ–≥—É–ª—è—Ä–∫—É
        tmp_match = self.regScrolls.search(message.text)
        if not tmp_match:
            return False
        # –ó–∞–ø–∏—à–µ–º –≤ –±–∞–∑—É
        self.setStorage(0, self._ITEM_GOLD, -300)
        self.setBookPages(DwgbCmdConst.STORE_DATA[self._ITEM_PAGE], 100)
        # –£—Å–ø–µ—à–Ω–æ
        return True
